{"ast":null,"code":"var _jsxFileName = \"/home/slimanimeddine/devstuff/Submissions/part7/bloglist-frontend/src/components/BlogForm.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addNewBlog } from '../slices/blogsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BlogForm = () => {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [url, setUrl] = useState('');\n  const [addRequestStatus, setAddRequestStatus] = useState('idle');\n  const dispatch = useDispatch();\n\n  const handleTitleChange = event => {\n    setTitle(event.target.value);\n  };\n\n  const handleAuthorChange = event => {\n    setAuthor(event.target.value);\n  };\n\n  const handleUrlChange = event => {\n    setUrl(event.target.value);\n  };\n\n  const canSave = [title, author, url].every(Boolean) && addRequestStatus === 'idle';\n\n  const onCreateBlogClicked = async () => {\n    if (canSave) {\n      try {\n        setAddRequestStatus('pending');\n        await dispatch(addNewBlog({\n          title,\n          author,\n          url\n        })).unwrap();\n        setTitle('');\n        setAuthor('');\n        setUrl('');\n      } catch (error) {\n        console.error('failed to create the blog: ', error);\n      } finally {\n        setAddRequestStatus('idle');\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"title\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"title\",\n        value: title,\n        name: \"title\",\n        onChange: handleTitleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"author\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"author\",\n        value: author,\n        name: \"author\",\n        onChange: handleAuthorChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"url\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"url\",\n        value: url,\n        name: \"url\",\n        onChange: handleUrlChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"create-button\",\n      onClick: onCreateBlogClicked,\n      type: \"button\",\n      disabled: !canSave,\n      children: \"create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BlogForm, \"l+u0nLI4V2MsNmxDgoNXJBaduOQ=\", false, function () {\n  return [useDispatch];\n});\n\n_c = BlogForm;\nexport default BlogForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogForm\");","map":{"version":3,"sources":["/home/slimanimeddine/devstuff/Submissions/part7/bloglist-frontend/src/components/BlogForm.js"],"names":["React","useState","useDispatch","addNewBlog","BlogForm","title","setTitle","author","setAuthor","url","setUrl","addRequestStatus","setAddRequestStatus","dispatch","handleTitleChange","event","target","value","handleAuthorChange","handleUrlChange","canSave","every","Boolean","onCreateBlogClicked","unwrap","error","console"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { addNewBlog } from '../slices/blogsSlice'\n\nconst BlogForm = () => {\n    const [title, setTitle] = useState('')\n    const [author, setAuthor] = useState('')\n    const [url, setUrl] = useState('')\n    const [addRequestStatus, setAddRequestStatus] = useState('idle')\n\n    const dispatch = useDispatch()\n\n    const handleTitleChange = event => {\n        setTitle(event.target.value)\n    }\n    const handleAuthorChange = event => {\n        setAuthor(event.target.value)\n    }\n    const handleUrlChange = event => {\n        setUrl(event.target.value)\n    }\n\n    const canSave = [title, author, url].every(Boolean) && addRequestStatus === 'idle'\n\n    const onCreateBlogClicked = async () => {\n        if (canSave) {\n            try {\n                setAddRequestStatus('pending') \n                await dispatch(addNewBlog({ title, author, url })).unwrap()\n                setTitle('')\n                setAuthor('')\n                setUrl('')\n            } catch (error) {\n                console.error('failed to create the blog: ', error) \n            } finally {\n                setAddRequestStatus('idle')\n            }\n        }\n    }\n\n    return (\n        <form>\n            <div>\n          title\n                <input\n                    type='text'\n                    id='title'\n                    value={title}\n                    name='title'\n                    onChange={handleTitleChange}\n                />\n            </div>\n            <div>\n          author\n                <input\n                    type='text'\n                    id='author'\n                    value={author}\n                    name='author'\n                    onChange={handleAuthorChange}\n                />\n            </div>\n            <div>\n          url\n                <input\n                    type='text'\n                    id='url'\n                    value={url}\n                    name='url'\n                    onChange={handleUrlChange}\n                />\n            </div>\n            <button id='create-button' onClick={onCreateBlogClicked} type='button' disabled={!canSave}>create</button>\n        </form>  \n    )\n}\n\nexport default BlogForm"]},"metadata":{},"sourceType":"module"}