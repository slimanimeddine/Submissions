{"ast":null,"code":"var _jsxFileName = \"/home/slimanimeddine/devstuff/Submissions/part7/bloglist-frontend/src/App.js\",\n    _s = $RefreshSig$();\n\n// eslint-disable-next-line no-unused-vars\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Blog from './components/Blog';\nimport Notification from './components/Notification';\nimport BlogForm from './components/BlogForm';\nimport Togglable from './components/Togglable';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\nimport { selectBlogIds, fetchBlogs } from './slices/blogsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [blogs, setBlogs] = useState([]);\n  const [user, setUser] = useState(null);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [notifMessage, setNotificationMessage] = useState('');\n  const [notifClassname, setNotifClassname] = useState('');\n  const dispatch = useDispatch();\n  const blogIds = useSelector(selectBlogIds);\n  const blogStatus = useSelector(state => state.blogs.status);\n  const error = useSelector(state => state.blogs.error);\n  useEffect(() => {\n    if (blogStatus === 'idle') {\n      dispatch(fetchBlogs());\n    }\n  }, [blogStatus, dispatch]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const blogs = await blogService.getAll();\n      setBlogs(blogs);\n    };\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedUser');\n\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const user = await loginService.login({\n        username,\n        password\n      });\n      blogService.setToken(user.token);\n      window.localStorage.setItem('loggedUser', JSON.stringify(user));\n      setUser(user);\n      setUsername('');\n      setPassword('');\n      setNotificationMessage(`${user.name} logged in successfully`);\n      setNotifClassname('success');\n      setTimeout(() => {\n        setNotificationMessage(null);\n        setNotifClassname(null);\n      }, 5000);\n    } catch (error) {\n      setNotificationMessage('wrong username or password');\n      setNotifClassname('error');\n      setTimeout(() => {\n        setNotificationMessage(null);\n        setNotifClassname(null);\n      }, 5000);\n    }\n  };\n\n  const logout = () => {\n    const confirmLogout = window.confirm('Are you sure?');\n\n    if (confirmLogout) {\n      window.localStorage.removeItem('loggedUser');\n      user.set(null);\n    }\n  };\n\n  const loginForm = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"log in to application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"username\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          value: username,\n          name: \"username\",\n          onChange: _ref => {\n            let {\n              target\n            } = _ref;\n            return setUsername(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          name: \"password\",\n          onChange: _ref2 => {\n            let {\n              target\n            } = _ref2;\n            return setPassword(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"login-button\",\n        type: \"submit\",\n        children: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n\n  const addBlog = async blogObject => {\n    try {\n      const addedBlog = await blogService.create(blogObject);\n      setBlogs(blogs.concat(addedBlog));\n      setNotificationMessage(`a new blog ${addedBlog.title} added`);\n      setNotifClassname('success');\n      setTimeout(() => {\n        setNotificationMessage(null);\n        setNotifClassname(null);\n      }, 5000);\n    } catch (error) {\n      setNotificationMessage(`${error.message}`);\n      setNotifClassname('error');\n      setTimeout(() => {\n        setNotificationMessage(null);\n        setNotifClassname(null);\n      }, 5000);\n    }\n  };\n\n  const incLikes = async id => {\n    const blog = blogs.find(b => b.id === id);\n    const modifiedBlog = { ...blog,\n      likes: blog.likes + 1,\n      user: user.id\n    };\n\n    try {\n      const returnedBlog = await blogService.update(id, modifiedBlog);\n      setBlogs(blogs.map(b => b.id !== id ? b : returnedBlog));\n    } catch (error) {\n      setNotificationMessage(error.message);\n      setNotifClassname('error');\n      setTimeout(() => {\n        setNotificationMessage(null);\n        setNotifClassname(null);\n      }, 5000);\n    }\n  };\n\n  const removeBlog = async id => {\n    const blogToRemove = blogs.find(b => b.id === id);\n    const ok = window.confirm(`remove blog ${blogToRemove.title} by ${blogToRemove.author}`);\n\n    if (ok) {\n      try {\n        await blogService.remove(id);\n        setBlogs(blogs.filter(b => b.id !== id));\n        setNotificationMessage('blog was removed successfully');\n        setNotifClassname('success');\n        setTimeout(() => {\n          setNotificationMessage(null);\n          setNotifClassname(null);\n        }, 5000);\n      } catch (error) {\n        setNotificationMessage(error.message);\n        setNotifClassname('error');\n        setTimeout(() => {\n          setNotificationMessage(null);\n          setNotifClassname(null);\n        }, 5000);\n      }\n    }\n  };\n\n  const blogForm = () => /*#__PURE__*/_jsxDEV(Togglable, {\n    buttonLabel: \"create new blog\",\n    children: /*#__PURE__*/_jsxDEV(BlogForm, {\n      createBlog: addBlog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 182,\n    columnNumber: 9\n  }, this);\n\n  let content;\n\n  if (blogStatus === 'loading') {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 19\n    }, this);\n  } else if (blogStatus === 'succeeded') {\n    content = blogIds.map(blogId => /*#__PURE__*/_jsxDEV(Blog, {\n      blogId: blogId,\n      incLikes: () => incLikes(blogId),\n      removeBlog: () => removeBlog(blogId),\n      isRemovable: false\n    }, blogId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }, this));\n  } else if (blogStatus === 'failed') {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 19\n    }, this);\n  }\n\n  const showUser = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Blogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [user.name, \" logged in\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logout,\n        children: \"logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this), blogForm(), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Notification, {\n      message: notifMessage,\n      classname: notifClassname\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }, this), user === null ? loginForm() : showUser()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"MYi6Ns8I2vAZ+SYTTWv6bjQ89CU=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/slimanimeddine/devstuff/Submissions/part7/bloglist-frontend/src/App.js"],"names":["React","useState","useEffect","useSelector","useDispatch","Blog","Notification","BlogForm","Togglable","blogService","loginService","selectBlogIds","fetchBlogs","App","blogs","setBlogs","user","setUser","username","setUsername","password","setPassword","notifMessage","setNotificationMessage","notifClassname","setNotifClassname","dispatch","blogIds","blogStatus","state","status","error","fetchData","getAll","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","token","handleLogin","event","preventDefault","login","setItem","stringify","name","setTimeout","logout","confirmLogout","confirm","removeItem","set","loginForm","target","value","addBlog","blogObject","addedBlog","create","concat","title","message","incLikes","id","blog","find","b","modifiedBlog","likes","returnedBlog","update","map","removeBlog","blogToRemove","ok","author","remove","filter","blogForm","content","blogId","showUser"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,SACIC,aADJ,EAEIC,UAFJ,QAGO,qBAHP;;;AAKA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACe,IAAD,EAAOC,OAAP,IAAkBhB,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACiB,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACqB,YAAD,EAAeC,sBAAf,IAAyCtB,QAAQ,CAAC,EAAD,CAAvD;AACA,QAAM,CAACuB,cAAD,EAAiBC,iBAAjB,IAAsCxB,QAAQ,CAAC,EAAD,CAApD;AAEA,QAAMyB,QAAQ,GAAGtB,WAAW,EAA5B;AACA,QAAMuB,OAAO,GAAGxB,WAAW,CAACQ,aAAD,CAA3B;AACA,QAAMiB,UAAU,GAAGzB,WAAW,CAAE0B,KAAD,IAAWA,KAAK,CAACf,KAAN,CAAYgB,MAAxB,CAA9B;AACA,QAAMC,KAAK,GAAG5B,WAAW,CAAE0B,KAAD,IAAWA,KAAK,CAACf,KAAN,CAAYiB,KAAxB,CAAzB;AAEA7B,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI0B,UAAU,KAAK,MAAnB,EAA2B;AACvBF,MAAAA,QAAQ,CAACd,UAAU,EAAX,CAAR;AACH;AACJ,GAJQ,EAIN,CAACgB,UAAD,EAAaF,QAAb,CAJM,CAAT;AAMAxB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM8B,SAAS,GAAG,YAAY;AAC1B,YAAMlB,KAAK,GAAG,MAAML,WAAW,CAACwB,MAAZ,EAApB;AACAlB,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,KAHD;;AAKAkB,IAAAA,SAAS;AACZ,GAPQ,EAON,EAPM,CAAT;AASA9B,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMgC,cAAc,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,YAA5B,CAAvB;;AACA,QAAIH,cAAJ,EAAoB;AAChB,YAAMlB,IAAI,GAAGsB,IAAI,CAACC,KAAL,CAAWL,cAAX,CAAb;AACAjB,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAP,MAAAA,WAAW,CAAC+B,QAAZ,CAAqBxB,IAAI,CAACyB,KAA1B;AACH;AACJ,GAPQ,EAON,EAPM,CAAT;;AASA,QAAMC,WAAW,GAAG,MAAMC,KAAN,IAAe;AAC/BA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAI;AACA,YAAM5B,IAAI,GAAG,MAAMN,YAAY,CAACmC,KAAb,CAAmB;AAClC3B,QAAAA,QADkC;AACxBE,QAAAA;AADwB,OAAnB,CAAnB;AAIAX,MAAAA,WAAW,CAAC+B,QAAZ,CAAqBxB,IAAI,CAACyB,KAA1B;AACAN,MAAAA,MAAM,CAACC,YAAP,CAAoBU,OAApB,CAA4B,YAA5B,EAA0CR,IAAI,CAACS,SAAL,CAAe/B,IAAf,CAA1C;AACAC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,MAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,MAAAA,sBAAsB,CAAE,GAAEP,IAAI,CAACgC,IAAK,yBAAd,CAAtB;AACAvB,MAAAA,iBAAiB,CAAC,SAAD,CAAjB;AACAwB,MAAAA,UAAU,CAAC,MAAM;AACb1B,QAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACAE,QAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH,OAHS,EAGP,IAHO,CAAV;AAIH,KAhBD,CAgBE,OAAOM,KAAP,EAAc;AACZR,MAAAA,sBAAsB,CAAC,4BAAD,CAAtB;AACAE,MAAAA,iBAAiB,CAAC,OAAD,CAAjB;AACAwB,MAAAA,UAAU,CAAC,MAAM;AACb1B,QAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACAE,QAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH,OAHS,EAGP,IAHO,CAAV;AAKH;AACJ,GA5BD;;AA8BA,QAAMyB,MAAM,GAAG,MAAM;AACjB,UAAMC,aAAa,GAAGhB,MAAM,CAACiB,OAAP,CAAe,eAAf,CAAtB;;AACA,QAAID,aAAJ,EAAmB;AACfhB,MAAAA,MAAM,CAACC,YAAP,CAAoBiB,UAApB,CAA+B,YAA/B;AACArC,MAAAA,IAAI,CAACsC,GAAL,CAAS,IAAT;AACH;AACJ,GAND;;AAQA,QAAMC,SAAS,GAAG,mBACd;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,QAAQ,EAAEb,WAAhB;AAAA,8BACI;AAAA,4CAEI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,EAAE,EAAC,UAFP;AAGI,UAAA,KAAK,EAAExB,QAHX;AAII,UAAA,IAAI,EAAC,UAJT;AAKI,UAAA,QAAQ,EAAE;AAAA,gBAAC;AAACsC,cAAAA;AAAD,aAAD;AAAA,mBAAcrC,WAAW,CAACqC,MAAM,CAACC,KAAR,CAAzB;AAAA;AALd;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI;AAAA,4CAEI;AACI,UAAA,IAAI,EAAC,UADT;AAEI,UAAA,EAAE,EAAC,UAFP;AAGI,UAAA,KAAK,EAAErC,QAHX;AAII,UAAA,IAAI,EAAC,UAJT;AAKI,UAAA,QAAQ,EAAE;AAAA,gBAAC;AAACoC,cAAAA;AAAD,aAAD;AAAA,mBAAcnC,WAAW,CAACmC,MAAM,CAACC,KAAR,CAAzB;AAAA;AALd;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ,eAqBI;AAAQ,QAAA,EAAE,EAAC,cAAX;AAA0B,QAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;;AA6BA,QAAMC,OAAO,GAAG,MAAMC,UAAN,IAAoB;AAChC,QAAI;AACA,YAAMC,SAAS,GAAG,MAAMnD,WAAW,CAACoD,MAAZ,CAAmBF,UAAnB,CAAxB;AACA5C,MAAAA,QAAQ,CAACD,KAAK,CAACgD,MAAN,CAAaF,SAAb,CAAD,CAAR;AACArC,MAAAA,sBAAsB,CAAE,cAAaqC,SAAS,CAACG,KAAM,QAA/B,CAAtB;AACAtC,MAAAA,iBAAiB,CAAC,SAAD,CAAjB;AACAwB,MAAAA,UAAU,CAAC,MAAM;AACb1B,QAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACAE,QAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH,OAHS,EAGP,IAHO,CAAV;AAIH,KATD,CASE,OAAOM,KAAP,EAAc;AACZR,MAAAA,sBAAsB,CAAE,GAAEQ,KAAK,CAACiC,OAAQ,EAAlB,CAAtB;AACAvC,MAAAA,iBAAiB,CAAC,OAAD,CAAjB;AACAwB,MAAAA,UAAU,CAAC,MAAM;AACb1B,QAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACAE,QAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH,OAHS,EAGP,IAHO,CAAV;AAIH;AACJ,GAlBD;;AAoBA,QAAMwC,QAAQ,GAAG,MAAMC,EAAN,IAAY;AACzB,UAAMC,IAAI,GAAGrD,KAAK,CAACsD,IAAN,CAAWC,CAAC,IAAIA,CAAC,CAACH,EAAF,KAASA,EAAzB,CAAb;AACA,UAAMI,YAAY,GAAG,EAAC,GAAGH,IAAJ;AAAUI,MAAAA,KAAK,EAAEJ,IAAI,CAACI,KAAL,GAAa,CAA9B;AAAiCvD,MAAAA,IAAI,EAAEA,IAAI,CAACkD;AAA5C,KAArB;;AAEA,QAAI;AACA,YAAMM,YAAY,GAAG,MAAM/D,WAAW,CAACgE,MAAZ,CAAmBP,EAAnB,EAAuBI,YAAvB,CAA3B;AACAvD,MAAAA,QAAQ,CAACD,KAAK,CAAC4D,GAAN,CAAUL,CAAC,IAAIA,CAAC,CAACH,EAAF,KAASA,EAAT,GAAcG,CAAd,GAAkBG,YAAjC,CAAD,CAAR;AACH,KAHD,CAGE,OAAOzC,KAAP,EAAc;AACZR,MAAAA,sBAAsB,CAACQ,KAAK,CAACiC,OAAP,CAAtB;AACAvC,MAAAA,iBAAiB,CAAC,OAAD,CAAjB;AACAwB,MAAAA,UAAU,CAAC,MAAM;AACb1B,QAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACAE,QAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH,OAHS,EAGP,IAHO,CAAV;AAIH;AACJ,GAfD;;AAiBA,QAAMkD,UAAU,GAAG,MAAMT,EAAN,IAAY;AAC3B,UAAMU,YAAY,GAAG9D,KAAK,CAACsD,IAAN,CAAWC,CAAC,IAAIA,CAAC,CAACH,EAAF,KAASA,EAAzB,CAArB;AACA,UAAMW,EAAE,GAAG1C,MAAM,CAACiB,OAAP,CAAgB,eAAcwB,YAAY,CAACb,KAAM,OAAMa,YAAY,CAACE,MAAO,EAA3E,CAAX;;AAEA,QAAID,EAAJ,EAAQ;AACJ,UAAI;AACA,cAAMpE,WAAW,CAACsE,MAAZ,CAAmBb,EAAnB,CAAN;AACAnD,QAAAA,QAAQ,CAACD,KAAK,CAACkE,MAAN,CAAaX,CAAC,IAAIA,CAAC,CAACH,EAAF,KAASA,EAA3B,CAAD,CAAR;AACA3C,QAAAA,sBAAsB,CAAC,+BAAD,CAAtB;AACAE,QAAAA,iBAAiB,CAAC,SAAD,CAAjB;AACAwB,QAAAA,UAAU,CAAC,MAAM;AACb1B,UAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACAE,UAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH,SAHS,EAGP,IAHO,CAAV;AAIH,OATD,CASE,OAAOM,KAAP,EAAc;AACZR,QAAAA,sBAAsB,CAACQ,KAAK,CAACiC,OAAP,CAAtB;AACAvC,QAAAA,iBAAiB,CAAC,OAAD,CAAjB;AACAwB,QAAAA,UAAU,CAAC,MAAM;AACb1B,UAAAA,sBAAsB,CAAC,IAAD,CAAtB;AACAE,UAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH,SAHS,EAGP,IAHO,CAAV;AAIH;AACJ;AACJ,GAvBD;;AAyBA,QAAMwD,QAAQ,GAAG,mBACb,QAAC,SAAD;AAAW,IAAA,WAAW,EAAC,iBAAvB;AAAA,2BACI,QAAC,QAAD;AACI,MAAA,UAAU,EAAEvB;AADhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;;AAQA,MAAIwB,OAAJ;;AAEA,MAAItD,UAAU,KAAK,SAAnB,EAA8B;AAC1BsD,IAAAA,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAV;AACH,GAFD,MAEO,IAAItD,UAAU,KAAK,WAAnB,EAAgC;AACnCsD,IAAAA,OAAO,GAAGvD,OAAO,CACZ+C,GADK,CACDS,MAAM,iBACP,QAAC,IAAD;AAEI,MAAA,MAAM,EAAEA,MAFZ;AAGI,MAAA,QAAQ,EAAE,MAAMlB,QAAQ,CAACkB,MAAD,CAH5B;AAII,MAAA,UAAU,EAAE,MAAMR,UAAU,CAACQ,MAAD,CAJhC;AAKI,MAAA,WAAW,EAAE;AALjB,OACSA,MADT;AAAA;AAAA;AAAA;AAAA,YAFE,CAAV;AAUH,GAXM,MAWA,IAAIvD,UAAU,KAAK,QAAnB,EAA6B;AAChCsD,IAAAA,OAAO,gBAAG;AAAA,gBAAMnD;AAAN;AAAA;AAAA;AAAA;AAAA,YAAV;AACH;;AAED,QAAMqD,QAAQ,GAAG,mBACb;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,iBACKpE,IAAI,CAACgC,IADV,6BAEI;AAAQ,QAAA,OAAO,EAAEE,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAMK+B,QAAQ,EANb,eAOI;AAAA,gBACKC;AADL;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;;AAeA,sBACI;AAAA,4BACI,QAAC,YAAD;AAAc,MAAA,OAAO,EAAE5D,YAAvB;AAAqC,MAAA,SAAS,EAAEE;AAAhD;AAAA;AAAA;AAAA;AAAA,YADJ,EAGQR,IAAI,KAAK,IAAT,GACMuC,SAAS,EADf,GAEM6B,QAAQ,EALtB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CA1ND;;GAAMvE,G;UAQeT,W,EACDD,W,EACGA,W,EACLA,W;;;KAXZU,G;AA4NN,eAAeA,GAAf","sourcesContent":["// eslint-disable-next-line no-unused-vars\nimport React, {useState, useEffect} from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Blog from './components/Blog'\nimport Notification from './components/Notification'\nimport BlogForm from './components/BlogForm'\nimport Togglable from './components/Togglable'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport {\n    selectBlogIds,\n    fetchBlogs,\n} from './slices/blogsSlice'\n\nconst App = () => {\n    const [blogs, setBlogs] = useState([])\n    const [user, setUser] = useState(null)\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [notifMessage, setNotificationMessage] = useState('')\n    const [notifClassname, setNotifClassname] = useState('')\n\n    const dispatch = useDispatch()\n    const blogIds = useSelector(selectBlogIds)\n    const blogStatus = useSelector((state) => state.blogs.status)\n    const error = useSelector((state) => state.blogs.error)\n\n    useEffect(() => {\n        if (blogStatus === 'idle') {\n            dispatch(fetchBlogs())\n        }\n    }, [blogStatus, dispatch])\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const blogs = await blogService.getAll()\n            setBlogs(blogs)\n        }\n\n        fetchData()\n    }, [])\n\n    useEffect(() => {\n        const loggedUserJSON = window.localStorage.getItem('loggedUser')\n        if (loggedUserJSON) {\n            const user = JSON.parse(loggedUserJSON)\n            setUser(user)\n            blogService.setToken(user.token)\n        }\n    }, [])\n\n    const handleLogin = async event => {\n        event.preventDefault()\n\n        try {\n            const user = await loginService.login({\n                username, password\n            })\n\n            blogService.setToken(user.token)\n            window.localStorage.setItem('loggedUser', JSON.stringify(user))\n            setUser(user)\n            setUsername('')\n            setPassword('')\n            setNotificationMessage(`${user.name} logged in successfully`)\n            setNotifClassname('success')   \n            setTimeout(() => {\n                setNotificationMessage(null)\n                setNotifClassname(null)   \n            }, 5000)\n        } catch (error) {\n            setNotificationMessage('wrong username or password')\n            setNotifClassname('error')   \n            setTimeout(() => {\n                setNotificationMessage(null)\n                setNotifClassname(null)   \n            }, 5000)\n\n        }\n    }\n\n    const logout = () => {\n        const confirmLogout = window.confirm('Are you sure?')\n        if (confirmLogout) {\n            window.localStorage.removeItem('loggedUser')\n            user.set(null)\n        }\n    }\n\n    const loginForm = () => (\n        <div>\n            <h1>log in to application</h1>\n            <form onSubmit={handleLogin}>\n                <div>\n          username\n                    <input\n                        type='text'\n                        id='username'\n                        value={username}\n                        name='username'\n                        onChange={({target}) => setUsername(target.value)}\n                    />\n                </div>\n                <div>\n          password\n                    <input\n                        type='password'\n                        id='password'\n                        value={password}\n                        name='password'\n                        onChange={({target}) => setPassword(target.value)}\n                    />\n                </div>\n                <button id='login-button' type='submit'>login</button>\n            </form>\n        </div>\n    )\n\n    const addBlog = async blogObject => {\n        try {\n            const addedBlog = await blogService.create(blogObject)\n            setBlogs(blogs.concat(addedBlog))\n            setNotificationMessage(`a new blog ${addedBlog.title} added`)\n            setNotifClassname('success')   \n            setTimeout(() => {\n                setNotificationMessage(null)\n                setNotifClassname(null)   \n            }, 5000)\n        } catch (error) {\n            setNotificationMessage(`${error.message}`)\n            setNotifClassname('error')   \n            setTimeout(() => {\n                setNotificationMessage(null)\n                setNotifClassname(null)   \n            }, 5000)      \n        }\n    }\n\n    const incLikes = async id => {\n        const blog = blogs.find(b => b.id === id)\n        const modifiedBlog = {...blog, likes: blog.likes + 1, user: user.id}\n\n        try {\n            const returnedBlog = await blogService.update(id, modifiedBlog)\n            setBlogs(blogs.map(b => b.id !== id ? b : returnedBlog))\n        } catch (error) {\n            setNotificationMessage(error.message)\n            setNotifClassname('error')\n            setTimeout(() => {\n                setNotificationMessage(null)\n                setNotifClassname(null)          \n            }, 5000)\n        }\n    }\n\n    const removeBlog = async id => {\n        const blogToRemove = blogs.find(b => b.id === id)\n        const ok = window.confirm(`remove blog ${blogToRemove.title} by ${blogToRemove.author}`)\n\n        if (ok) {\n            try {\n                await blogService.remove(id)\n                setBlogs(blogs.filter(b => b.id !== id))\n                setNotificationMessage('blog was removed successfully')\n                setNotifClassname('success')\n                setTimeout(() => {\n                    setNotificationMessage(null)\n                    setNotifClassname(null)          \n                }, 5000)              \n            } catch (error) {\n                setNotificationMessage(error.message)\n                setNotifClassname('error')\n                setTimeout(() => {\n                    setNotificationMessage(null)\n                    setNotifClassname(null)          \n                }, 5000)      \n            }  \n        }\n    }\n\n    const blogForm = () => (\n        <Togglable buttonLabel='create new blog'>\n            <BlogForm\n                createBlog={addBlog}\n            />\n        </Togglable>\n    )\n\n    let content\n\n    if (blogStatus === 'loading') {\n        content = <div>loading...</div>\n    } else if (blogStatus === 'succeeded') {\n        content = blogIds\n            .map(blogId => \n                <Blog\n                    key={blogId}\n                    blogId={blogId}\n                    incLikes={() => incLikes(blogId)}\n                    removeBlog={() => removeBlog(blogId)}\n                    isRemovable={false}\n                />\n            )\n    } else if (blogStatus === 'failed') {\n        content = <div>{error}</div>\n    }\n\n    const showUser = () => (\n        <div>\n            <h1>Blogs</h1>     \n            <div>\n                {user.name} logged in \n                <button onClick={logout}>logout</button>\n            </div> \n            {blogForm()}\n            <div>\n                {content}\n            </div>\n        </div>\n    )\n\n\n    return (\n        <div>\n            <Notification message={notifMessage} classname={notifClassname} /> \n            {\n                user === null \n                    ? loginForm()\n                    : showUser() \n            }\n        </div>\n    )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}