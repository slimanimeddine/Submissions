{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = '/api/blogs';\nlet token = null;\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl);\n  return response.data;\n};\n\nconst create = async newBlog => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.post(baseUrl, newBlog, config);\n  return response.data;\n};\n\nconst update = async (id, newObject) => {\n  const response = await axios.put(`${baseUrl}/${id}`, newObject);\n  return response.data;\n};\n\nconst remove = async id => {\n  const config = {\n    headers: {\n      Authorization: token\n    }\n  };\n  const response = await axios.delete(`${baseUrl}/${id}`, config);\n  return response.data;\n};\n\nexport default {\n  getAll,\n  create,\n  setToken,\n  update,\n  remove\n};","map":{"version":3,"sources":["/home/slimanimeddine/devstuff/Submissions/part7/bloglist-frontend/src/services/blogs.js"],"names":["axios","baseUrl","token","setToken","newToken","getAll","response","get","data","create","newBlog","config","headers","Authorization","post","update","id","newObject","put","remove","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,YAAhB;AAEA,IAAIC,KAAK,GAAG,IAAZ;;AAEA,MAAMC,QAAQ,GAAGC,QAAQ,IAAI;AACzBF,EAAAA,KAAK,GAAI,UAASE,QAAS,EAA3B;AACH,CAFD;;AAIA,MAAMC,MAAM,GAAG,YAAY;AACvB,QAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAUN,OAAV,CAAvB;AACA,SAAOK,QAAQ,CAACE,IAAhB;AACH,CAHD;;AAKA,MAAMC,MAAM,GAAG,MAAMC,OAAN,IAAiB;AAC5B,QAAMC,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAEX;AADV;AADE,GAAf;AAKA,QAAMI,QAAQ,GAAG,MAAMN,KAAK,CAACc,IAAN,CAAWb,OAAX,EAAoBS,OAApB,EAA6BC,MAA7B,CAAvB;AACA,SAAOL,QAAQ,CAACE,IAAhB;AACH,CARD;;AAUA,MAAMO,MAAM,GAAG,OAAOC,EAAP,EAAWC,SAAX,KAAyB;AACpC,QAAMX,QAAQ,GAAG,MAAMN,KAAK,CAACkB,GAAN,CAAW,GAAEjB,OAAQ,IAAGe,EAAG,EAA3B,EAA8BC,SAA9B,CAAvB;AACA,SAAOX,QAAQ,CAACE,IAAhB;AACH,CAHD;;AAKA,MAAMW,MAAM,GAAG,MAAMH,EAAN,IAAY;AACvB,QAAML,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAEX;AADV;AADE,GAAf;AAKA,QAAMI,QAAQ,GAAG,MAAMN,KAAK,CAACoB,MAAN,CAAc,GAAEnB,OAAQ,IAAGe,EAAG,EAA9B,EAAiCL,MAAjC,CAAvB;AACA,SAAOL,QAAQ,CAACE,IAAhB;AACH,CARD;;AAUA,eAAe;AAAEH,EAAAA,MAAF;AAAUI,EAAAA,MAAV;AAAkBN,EAAAA,QAAlB;AAA4BY,EAAAA,MAA5B;AAAoCI,EAAAA;AAApC,CAAf","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n    token = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n    const response = await axios.get(baseUrl)\n    return response.data\n}\n\nconst create = async newBlog => {\n    const config = {\n        headers: {\n            Authorization: token\n        }\n    }\n    const response = await axios.post(baseUrl, newBlog, config)\n    return response.data\n}\n\nconst update = async (id, newObject) => {\n    const response = await axios.put(`${baseUrl}/${id}`, newObject)\n    return response.data\n}\n\nconst remove = async id => {\n    const config = {\n        headers: {\n            Authorization: token\n        }\n    }\n    const response = await axios.delete(`${baseUrl}/${id}`, config)\n    return response.data\n}\n \nexport default { getAll, create, setToken, update, remove }"]},"metadata":{},"sourceType":"module"}