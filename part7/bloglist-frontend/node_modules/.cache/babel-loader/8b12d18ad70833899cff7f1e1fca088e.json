{"ast":null,"code":"var _jsxFileName = \"/home/slimanimeddine/devstuff/Submissions/part7/bloglist-frontend/src/components/Blog.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/prop-types */\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectBlogById, updateBlog, removeBlog } from '../slices/blogsSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Blog = _ref => {\n  _s();\n\n  let {\n    blogId,\n    currentUser\n  } = _ref;\n  const {\n    title,\n    url,\n    likes,\n    user\n  } = useSelector(state => selectBlogById(state, blogId));\n  const [visible, setVisible] = useState(false);\n  const dispatch = useDispatch();\n  const blog = useSelector(state => selectBlogById(state, blogId));\n  const isRemovable = blog.user === currentUser;\n  const removeBtnStyle = {\n    display: isRemovable ? '' : 'none'\n  };\n\n  const toggleVisibility = () => {\n    setVisible(!visible);\n  };\n\n  const incLikes = async () => {\n    const modifiedBlog = { ...blog,\n      likes: blog.likes + 1,\n      user: user.id\n    };\n\n    try {\n      await dispatch(updateBlog(blogId, modifiedBlog)).unwrap();\n    } catch (error) {\n      console.error('failed to increment likes: ', error);\n    }\n  };\n\n  const delBlog = async () => {\n    const ok = window.confirm(`remove blog ${blog.title} ?`);\n\n    if (ok) {\n      try {\n        await dispatch(removeBlog(blogId)).unwrap();\n      } catch (error) {\n        console.error('failed to remove blog: ', error);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blogStyle\",\n    children: [title, \" | \", user.name, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleVisibility,\n      children: \"view\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), visible && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"likes \", likes, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: incLikes,\n          children: \"like\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: removeBtnStyle,\n        onClick: delBlog,\n        children: \"remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Blog, \"fryR4CTba89coP6aAzGPwmA9p9c=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\n_c = Blog;\nexport default Blog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"sources":["/home/slimanimeddine/devstuff/Submissions/part7/bloglist-frontend/src/components/Blog.js"],"names":["React","useState","useSelector","useDispatch","selectBlogById","updateBlog","removeBlog","Blog","blogId","currentUser","title","url","likes","user","state","visible","setVisible","dispatch","blog","isRemovable","removeBtnStyle","display","toggleVisibility","incLikes","modifiedBlog","id","unwrap","error","console","delBlog","ok","window","confirm","name"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,EAAyBC,UAAzB,EAAqCC,UAArC,QAAuD,sBAAvD;;;AAEA,MAAMC,IAAI,GAAG,QAA6B;AAAA;;AAAA,MAA5B;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAA4B;AACtC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,GAAT;AAAcC,IAAAA,KAAd;AAAqBC,IAAAA;AAArB,MAA8BX,WAAW,CAACY,KAAK,IAAIV,cAAc,CAACU,KAAD,EAAQN,MAAR,CAAxB,CAA/C;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMgB,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAMe,IAAI,GAAGhB,WAAW,CAACY,KAAK,IAAIV,cAAc,CAACU,KAAD,EAAQN,MAAR,CAAxB,CAAxB;AACA,QAAMW,WAAW,GAAGD,IAAI,CAACL,IAAL,KAAcJ,WAAlC;AACA,QAAMW,cAAc,GAAG;AAACC,IAAAA,OAAO,EAAEF,WAAW,GAAG,EAAH,GAAQ;AAA7B,GAAvB;;AAEA,QAAMG,gBAAgB,GAAG,MAAM;AAC3BN,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACH,GAFD;;AAIA,QAAMQ,QAAQ,GAAG,YAAY;AACzB,UAAMC,YAAY,GAAG,EAAE,GAAGN,IAAL;AAAWN,MAAAA,KAAK,EAAEM,IAAI,CAACN,KAAL,GAAa,CAA/B;AAAkCC,MAAAA,IAAI,EAAEA,IAAI,CAACY;AAA7C,KAArB;;AACA,QAAI;AACA,YAAMR,QAAQ,CAACZ,UAAU,CAACG,MAAD,EAASgB,YAAT,CAAX,CAAR,CAA2CE,MAA3C,EAAN;AACH,KAFD,CAEE,OAAOC,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACD,KAAR,CAAc,6BAAd,EAA6CA,KAA7C;AACH;AACJ,GAPD;;AASA,QAAME,OAAO,GAAG,YAAY;AACxB,UAAMC,EAAE,GAAGC,MAAM,CAACC,OAAP,CAAgB,eAAcd,IAAI,CAACR,KAAM,IAAzC,CAAX;;AACA,QAAIoB,EAAJ,EAAQ;AACJ,UAAI;AACA,cAAMb,QAAQ,CAACX,UAAU,CAACE,MAAD,CAAX,CAAR,CAA6BkB,MAA7B,EAAN;AACH,OAFD,CAEE,OAAOC,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACD,KAAR,CAAc,yBAAd,EAAyCA,KAAzC;AACH;AACJ;AACJ,GATD;;AAWA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,eACKjB,KADL,SACeG,IAAI,CAACoB,IADpB,eAEI;AAAQ,MAAA,OAAO,EAAEX,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKP,OAAO,iBACJ;AAAA,8BACI;AAAA,kBAAMJ;AAAN;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,6BACWC,KADX,eAEI;AAAQ,UAAA,OAAO,EAAEW,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAMI;AAAQ,QAAA,KAAK,EAAEH,cAAf;AAA+B,QAAA,OAAO,EAAES,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAhDD;;GAAMtB,I;UACkCL,W,EAEnBC,W,EACJD,W;;;KAJXK,I;AAkDN,eAAeA,IAAf","sourcesContent":["/* eslint-disable react/prop-types */\nimport React, { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { selectBlogById, updateBlog, removeBlog } from '../slices/blogsSlice'\n\nconst Blog = ({ blogId, currentUser }) => {\n    const { title, url, likes, user } = useSelector(state => selectBlogById(state, blogId))\n    const [visible, setVisible] = useState(false)\n    const dispatch = useDispatch()\n    const blog = useSelector(state => selectBlogById(state, blogId))\n    const isRemovable = blog.user === currentUser\n    const removeBtnStyle = {display: isRemovable ? '' : 'none'}\n\n    const toggleVisibility = () => {\n        setVisible(!visible)\n    }\n\n    const incLikes = async () => {\n        const modifiedBlog = { ...blog, likes: blog.likes + 1, user: user.id }\n        try {\n            await dispatch(updateBlog(blogId, modifiedBlog)).unwrap()\n        } catch (error) {\n            console.error('failed to increment likes: ', error)\n        }\n    }\n\n    const delBlog = async () => {\n        const ok = window.confirm(`remove blog ${blog.title} ?`)\n        if (ok) {\n            try {\n                await dispatch(removeBlog(blogId)).unwrap()\n            } catch (error) {\n                console.error('failed to remove blog: ', error)\n            }  \n        }\n    }\n\n    return (\n        <div className='blogStyle'>\n            {title} | {user.name}\n            <button onClick={toggleVisibility}>view</button>\n            {visible && (\n                <div>\n                    <div>{url}</div>\n                    <div>\n                        likes {likes}\n                        <button onClick={incLikes}>like</button>\n                    </div>\n                    <button style={removeBtnStyle} onClick={delBlog}>remove</button>\n                </div>                        \n            )}\n        </div>\n    )\n}\n\nexport default Blog"]},"metadata":{},"sourceType":"module"}